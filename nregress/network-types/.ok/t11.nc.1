#define nx_struct struct
#define nx_union union
# 60 "/usr/local/avr/sys-include/inttypes.h"
typedef signed char int8_t;




typedef unsigned char uint8_t;
# 83 "/usr/local/avr/sys-include/inttypes.h" 3
typedef int int16_t;




typedef unsigned int uint16_t;










typedef long int32_t;




typedef unsigned long uint32_t;
#line 117
typedef long long int64_t;




typedef unsigned long long uint64_t;
#line 134
typedef int16_t intptr_t;




typedef uint16_t uintptr_t;
# 10 "/usr/local/lib/ncc/nesc_nx.h"
static __inline uint8_t __nesc_ntoh_uint8(void *source);
#line 48
static __inline uint8_t __nesc_hton_uint8(void *target, uint8_t value);
#line 187
typedef struct { char data[1]; } __attribute__((packed)) nx_int8_t;
typedef struct { char data[2]; } __attribute__((packed)) nx_int16_t;
typedef struct { char data[4]; } __attribute__((packed)) nx_int32_t;
typedef struct { char data[8]; } __attribute__((packed)) nx_int64_t;
typedef struct { char data[1]; } __attribute__((packed)) nx_uint8_t;
typedef struct { char data[2]; } __attribute__((packed)) nx_uint16_t;
typedef struct { char data[4]; } __attribute__((packed)) nx_uint32_t;
typedef struct { char data[8]; } __attribute__((packed)) nx_uint64_t;


typedef struct { char data[1]; } __attribute__((packed)) nxle_int8_t;
typedef struct { char data[2]; } __attribute__((packed)) nxle_int16_t;
typedef struct { char data[4]; } __attribute__((packed)) nxle_int32_t;
typedef struct { char data[8]; } __attribute__((packed)) nxle_int64_t;
typedef struct { char data[1]; } __attribute__((packed)) nxle_uint8_t;
typedef struct { char data[2]; } __attribute__((packed)) nxle_uint16_t;
typedef struct { char data[4]; } __attribute__((packed)) nxle_uint32_t;
typedef struct { char data[8]; } __attribute__((packed)) nxle_uint64_t;
# 3 "t11.nc"
struct t11$__nesc_unnamed4242 {
  nx_uint8_t a, b[10];
} t11$z;

int   main(void);
# 48 "/usr/local/lib/ncc/nesc_nx.h"
static __inline uint8_t __nesc_hton_uint8(void *target, uint8_t value)
#line 48
{
  uint8_t *base = target;

#line 50
  base[0] = value;
  return value;
}

#line 10
static __inline uint8_t __nesc_ntoh_uint8(void *source)
#line 10
{
  uint8_t *base = source;

#line 12
  return base[0];
}

# 7 "t11.nc"
int   main(void)
#line 7
{

  __nesc_hton_uint8(&t11$z.b[__nesc_ntoh_uint8(&t11$z.a)], 3);
  __nesc_hton_uint8(&__nesc_ntoh_uint8(&t11$z.a)[t11$z.b], 4);
  __nesc_hton_uint8(&*(__nesc_ntoh_uint8(&t11$z.a) + t11$z.b), 5);
  return 0;
}

