typedef int /*test.b1*/aa$0$Basic$crestype;
typedef int /*test.b2*/aa$1$Basic$crestype;
typedef int bb$b2$crestype;
typedef int bb$b1$crestype;
static  int /*test.b1*/aa$0$Basic$bind(int arg_hex);
static  int /*test.b2*/aa$1$Basic$bind(int arg_hex);
static inline  
# 5 "aa.nc"
int /*test.b1*/aa$0$Basic$bind(int settings);
static inline  
#line 5
int /*test.b2*/aa$1$Basic$bind(int settings);
static  
# 3 "i.nc"
int bb$b2$bind(int arg_hex);
static  
#line 3
int bb$b1$bind(int arg_hex);
# 6 "bb.nc"
void  bb$f(void);
static inline  
# 5 "aa.nc"
int /*test.b2*/aa$1$Basic$bind(int settings)
#line 5
{
#line 5
  return 0;
}

# 3 "i.nc"
inline static  int bb$b2$bind(int arg_hex){
#line 3
  int result;
#line 3

#line 3
  result = /*test.b2*/aa$1$Basic$bind(arg_hex);
#line 3

#line 3
  return result;
#line 3
}
#line 3
static inline  
# 5 "aa.nc"
int /*test.b1*/aa$0$Basic$bind(int settings)
#line 5
{
#line 5
  return 0;
}

# 3 "i.nc"
inline static  int bb$b1$bind(int arg_hex){
#line 3
  int result;
#line 3

#line 3
  result = /*test.b1*/aa$0$Basic$bind(arg_hex);
#line 3

#line 3
  return result;
#line 3
}
#line 3
# 6 "bb.nc"
void  bb$f(void)
#line 6
{
  bb$b1$bind(12);
  bb$b2$bind(13);
}

