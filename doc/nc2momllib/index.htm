<!-- $Id: index.htm,v 1.1.2.1 2004/05/14 18:00:18 celaine Exp $ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>nc2momllib</title>
<link href="../../lib/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1>nc2momllib</h1> 


<p> This tool is an extension of the <a
href="http://nescc.sourceforge.net" target="_top">nesC</a> compiler.
nesC is &quot;an extension to the C programming language designed to
embody the structuring concepts and execution model of TinyOS. TinyOS
is an event-driven operating system designed for sensor network nodes
that have very limited resources (e.g., 8K bytes of program memory,
512 bytes of RAM).&quot; TinyOS, described at <a
href="http://webs.cs.berkeley.edu/tos/" target="_top">http://webs.cs.berkeley.edu/tos/</a>,
is used, for example, on the Berkeley MICA &quot;motes,&quot; which
are small wireless sensor nodes.</p>

<p> nc2momllib is used to convert nesC files (.nc) into MoML files
(.xml).  This will create the Ptolemy II libraries of components that
are used to assemble models.  TinyOS provides a rich library of nesC
components. If you install TinyOS in $PTII/vendors/ptinyos (FIXME:
<code>/tinyos-1.x</code>?), then the Ptolemy II configure script will
find it and automatically make the TinyOS libraries available.</p>


<p>Below are the detailed instructions for:</p>

    <ul>
      <li><a href="#nc2momllib_dist">Installing the nc2momllib source distribution and building it.</a></li>
      <li><a href="#nc2momllib_source">Installing nc2momllib from CVS and compiling from scratch.</a></li>
    </ul>

<h2><a name="nc2momllib_dist">How to install the nc2momllib distribution and build it</a></h2>
    <ol>
      <li>You must install the following AVR tools:
        <ul>
          <li> avarice
          <li> avr-binutils
          <li> avr-gcc
          <li> avr-insight
          <li> avr-libc
        </ul>
        <p>
        Choose and follow the appropriate directions for your operating system:
        <ul>
          <li> If you are running Windows XP or Windows 2000, you can either:
            <ul>
              <li> Download WinAVR
   	       <ol> 
                  <li>Go to 
                    <a href="http://winavr.sourceforge.net/" target="_top"><code>http://winavr.sourceforge.net/</code></a>              
                  <li>Click on "Package"
                  <li>Download the latest release
                    <br> The link should be at the top of the page 
                    and have a name like "WinAVR 20040404"
                  <li>Install Winavr in any directory 
                    <i>Directories with spaces in the pathname might not work?</i>
                </ol>
              
              <li> <b>Or</b>
              <br>Download the <a
              href="http://webs.cs.berkeley.edu/tos/dist-1.1.0/tinyos/windows/tinyos-1.1.0-1is.exe">TinyOS
              Installshield Wizard</a>.  Run the wizard, and choose
              "Custom" install.  Install only the AVR tools.  This will install all of the rpms below for you.  <b>Do
              not choose the "cygwin" install option (it will
              overwrite and corrupt your current cygwin installation)
              or the "TinyOS" install option (you will install this
              later from CVS as a separate step).</b> You may choose
              to install the other remaining options if you do not
              already have them installed on your system. The wizard
              will install all of the selected rpms for you.

              <li> <b>Or</b>
	      <br><b>If your Cygwin is installed so your 'Default Text
	      File Type' is Unix, you can use these rpms</b>
	      <br><b>Note</b>: If you select 'Default Text File Type' of 
	      Unix instead of DOS, then you will likely have
	      <a href="http://www.gigascale.org/softdevel/faq/23.html" target="_top">Cygwin CR/NL problems</a> with CVS.
	      <br>So, if your 'Default Text File Type' is Unix,
	      you can download the rpms separately from
	      <a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/" target="_top">here</a>.  More convenient links are included here:
                <ul>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avarice-2.0.20030825cvs-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avarice-2.0.20030825cvs-1w.cygwin.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-binutils-2.13.2.1-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-binutils-2.13.2.1-1w.cygwin.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-gcc-3.3tinyos-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-gcc-3.3tinyos-1w.cygwin.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-insight-pre6.0cvs.tinyos-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-insight-pre6.0cvs.tinyos-1w.cygwin.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-libc-20030512cvs-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-libc-20030512cvs-1w.cygwin.i386.rpm</a>
                </ul>
              and install them on the cygwin command line with
              <pre>rpm --ignoreos -ivh *.rpm</pre> in the directory
              where you saved the files.
            </ul>

          <li> If you are running Linux (Redhat 9), download the rpms from
          <a
          href="http://webs.cs.berkeley.edu/tos/dist-1.1.0/tools/linux" target="_top">here</a>.  More convenient links are included here:
            <ul>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avarice-2.0.20030825cvs-1.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avarice-2.0.20030825cvs-1.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-binutils-2.13.2.1-1.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-binutils-2.13.2.1-1.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-gcc-3.3tinyos-1.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-gcc-3.3tinyos-1.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-insight-pre6.0cvs.tinyos-1.3.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-insight-pre6.0cvs.tinyos-1.3.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-libc-20030512cvs-1.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-libc-20030512cvs-1.i386.rpm</a>
            </ul>
          and install them with <pre>rpm -ivh *.rpm</pre> in the
          directory where you saved the files.
        </ul>

        (The directions above were modified from the <a href="http://webs.cs.berkeley.edu/tos/download.html" target="_top">original TinyOS installation directions</a>).

      <li>Make a directory into which to store the source code, for
      example:
        <pre>
    mkdir -p $PTII/vendors/ptinyos
        </pre>

      <li> We have put into the TinyOS makefiles a rule that you can
      run to create all the TinyOS libraries in one step. To use this,
      as of this writing, you need to get TinyOS from the CVS
      repository rather than getting the packaged install version. To
      do this, type:</p>

        <pre>
cd $PTII/vendors/ptinyos
cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/tinyos login
<i>Hit Enter when prompted for a password</i>
cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/tinyos co tinyos-1.x
        </pre>

        This will create a directory <code>tinyos-1.x</code>.  For more
        information, see <a
        href="http://sourceforge.net/cvs/?group_id=28656"><code>http://sourceforge.net/cvs/?group_id=28656</code></a>.

      <li> Set the TOSROOT environment variable to the location of the TinyOS source tree; also set the TOSDIR environment variable.
        <ul>
          <li>Under bash, type: 
            <pre>
export TOSROOT=$PTII/vendors/ptinyos/tinyos-1.x
export TOSDIR=$TOSROOT/tos
            </pre>

          <li>Under Windows with Cygwin, you can permanently set
          environment variables from the System control panel. For
          details, see <a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptII4.0/ptII/doc/install.htm#settingptII">Set the value of
          the PTII environment variable</a>. While you are setting
          environment variables in Windows, you may want to set <a
          href="#NC2MOMLLIB_NESC_dist">NC2MOMLLIB_NESC</a>.

          <li>Under csh or tcsh:
            <pre>
setenv TOSROOT $PTII/vendors/ptinyos/tinyos-1.x
setenv TOSDIR $TOSROOT/tos
            </pre>
        </ul>
      <li> Download the <a href="nc2momllib-1.1.1-1.tar.gz">nc2momllib distribution</a> and save it in $PTII/vendors/ptinyos.  Install it:
        <pre>
cd $PTII/vendors/ptinyos
gunzip nc2momllib-1.1.1-1.tar.gz
tar xvf nc2momllib-1.1.1-1.tar
        </pre>

      <li> Run configure for nc2momllib: 
        <pre>
cd $PTII/vendors/ptinyos/nc2momllib-1.1.1-1
./configure --prefix=$PTII/vendors/ptinyos
        </pre>
        If you are using Cygwin, and configure has trouble finding
        <code>TOSROOT</code> or <code>TOSDIR</code>, try expanding your
        <code>$PTII</code> environment variable to
        <code>/cygdrive/c/ptII</code> or something similar.  Also try
        expanding the <code>TOSROOT</code> and <code>TOSDIR</code>
        environment variables if you still have problems.

      <li> Install nc2momllib: 
        <pre>
make
make install
        </pre>
        This will create directories in <code>$PTII/vendors/ptinyos</code>

        <p>If you are using Cygwin and make cannot find avr-gcc, then
        avr-gcc is probably not in your path.  Locate avr-gcc and add
        the directory to your path.  If you cannot find avr-gcc, then
        the AVR rpm's were not installed correctly, and you will need
        to try to reinstall them.

      <li> <a name="NC2MOMLLIB_NESC_dist">Set another environment variable</a> (NC2MOMLLIB_NESC) that
      points to the nc2momllib installation.

        <ul>
          <li> Under bash, type:
            <pre>
export NC2MOMLLIB_NESC=$PTII/vendors/ptinyos
            </pre>
            
          <li>Under csh or tcsh 
            <pre>
setenv NC2MOMLLIB_NESC $PTII/vendors/ptinyos
            </pre>
        </ul>

      <li> Run the example 
        <pre>
cd $TOSROOT/contrib/momllib
make momllib mica
        </pre>

      <li> See if the examples worked: 
        <menu> 
          <li> You should see some valid MoML code in
          <CODE>$TOSROOT/contrib/momllib/build/momllib/Counters.xml</CODE>

          <li> It should correspond to the contents of
          <CODE>$TOSDIR/lib/Counters</CODE>
        </menu>
    </ol>
  </ol>

<h2><a name="nc2momllib_source">How to install nc2momllib from CVS and build it</a></h2>
    
    <p>You can also download the nc2momllib source code and build
    it. It is based on the nesC compiler, which requires an impressive
    suite of tools. 

    <ol>
      <li> Under Linux or Cygwin, you must have the following programs
      installed on your system:

        <ul> 
          <li> autoconf 2.50 or later 
          <li> bison 
          <li> emacs 
          <li> emacs-el 
          <li> gperf 
          <li> perl 
          <li> rpm 
        </ul>
        
        <p>For help with how to install these in Cygwin, see the <a
        href="../../../../doc/install.htm#cygwin">Ptolemy II Cygwin
        Instructions</a>. Note that most installations will not have
        gperf on them, at least, so you will likely need to install at
        least that.</p>

      <li>You must install the following AVR tools:
        <ul>
          <li> avarice
          <li> avr-binutils
          <li> avr-gcc
          <li> avr-insight
          <li> avr-libc
        </ul>
        <p>
        Choose and follow the appropriate directions for your operating system:
        <ul>
          <li> If you are running Windows XP or Windows 2000, you can either:
            <ul>
              <li> Download WinAVR
   	       <ol> 
                  <li>Go to 
                    <a href="http://winavr.sourceforge.net/" target="_top"><code>http://winavr.sourceforge.net/</code></a>              
                  <li>Click on "Package"
                  <li>Download the latest release
                    <br> The link should be at the top of the page 
                    and have a name like "WinAVR 20040404"
                  <li>Install Winavr in any directory 
                    <i>Directories with spaces in the pathname might not work?</i>
                </ol>
              
              <li> Download the <a
              href="http://webs.cs.berkeley.edu/tos/dist-1.1.0/tinyos/windows/tinyos-1.1.0-1is.exe">TinyOS
              Installshield Wizard</a>.  Run the wizard, and choose
              "Custom" install.  Install only the AVR tools.  <b>Do
              not choose the "cygwin" install option (it will
              overwrite and corrupt your current cygwin installation)
              or the "TinyOS" install option (you will install this
              later from CVS as a separate step).</b> You may choose
              to install the other remaining options if you do not
              already have them installed on your system.  The wizard
              will install all of the selected rpms for you.

              <li> Or you can download the rpms separately from <a
              href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/">here</a>.  More convenient links are included here:
                <ul>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avarice-2.0.20030825cvs-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avarice-2.0.20030825cvs-1w.cygwin.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-binutils-2.13.2.1-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-binutils-2.13.2.1-1w.cygwin.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-gcc-3.3tinyos-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-gcc-3.3tinyos-1w.cygwin.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-insight-pre6.0cvs.tinyos-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-insight-pre6.0cvs.tinyos-1w.cygwin.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-libc-20030512cvs-1w.cygwin.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/windows/avr-libc-20030512cvs-1w.cygwin.i386.rpm</a>
                </ul>
              and install them on the cygwin command line with
              <pre>rpm --ignoreos -ivh *.rpm</pre> in the directory
              where you saved the files.
            </ul>

          <li> If you are running Linux (Redhat 9), download the rpms from
          <a
          href="http://webs.cs.berkeley.edu/tos/dist-1.1.0/tools/linux">here</a>.  More convenient links are included here:
            <ul>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avarice-2.0.20030825cvs-1.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avarice-2.0.20030825cvs-1.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-binutils-2.13.2.1-1.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-binutils-2.13.2.1-1.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-gcc-3.3tinyos-1.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-gcc-3.3tinyos-1.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-insight-pre6.0cvs.tinyos-1.3.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-insight-pre6.0cvs.tinyos-1.3.i386.rpm</a>
<li><a href="http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-libc-20030512cvs-1.i386.rpm">http://today.cs.berkeley.edu/tos/dist-1.1.0/tools/linux/avr-libc-20030512cvs-1.i386.rpm</a>
            </ul>
            and install them on the cygwin command line with 
            <pre>rpm -ivh *.rpm</pre> 
            in the directory where you saved the files.
        </ul>

        (The directions above were modified from the <a href="http://webs.cs.berkeley.edu/tos/download.html" target="_top">original TinyOS installation directions</a>).

      <li>Make a directory into which to store the source code, for
      example:
        <pre>
    mkdir -p $PTII/vendors/ptinyos
        </pre>

      <li> We have put into the TinyOS makefiles a rule that you can
      run to create all the TinyOS libraries in one step. To use this,
      as of this writing, you need to get TinyOS from the CVS
      repository rather than getting the packaged install version. To
      do this, type:</p>

        <pre>
cd $PTII/vendors/ptinyos
cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/tinyos login
<i>Hit Enter when prompted for a password</i>
cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/tinyos co tinyos-1.x
        </pre>

        This will create a directory <code>tinyos-1.x</code>.  For more
        information, see <a
        href="http://sourceforge.net/cvs/?group_id=28656"><code>http://sourceforge.net/cvs/?group_id=28656</code></a>.

      <li> Set the TOSROOT environment variable to the location of the TinyOS source tree; also set the TOSDIR environment variable.
        <ul>
          <li>Under bash, type: 
            <pre>
export TOSROOT=$PTII/vendors/ptinyos/tinyos-1.x
export TOSDIR=$TOSROOT/tos
            </pre>

          <li>Under Windows with Cygwin, you can permanently set
          environment variables from the System control panel. For
          details, see <a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptII4.0/ptII/doc/install.htm#settingptII">Set the value of
          the PTII environment variable</a>. While you are setting
          environment variables in Windows, you may want to set <a
          href="#NC2MOMLLIB_NESC_source">NC2MOMLLIB_NESC</a>. 

          <li>Under csh or tcsh:
            <pre>
setenv TOSROOT $PTII/vendors/ptinyos/tinyos-1.x
setenv TOSDIR $TOSROOT/tos
            </pre>
        </ul>

      <li> Get the nesC CVS Tree, see <a
      href="http://sourceforge.net/cvs/?group_id=56288"><CODE>http://sourceforge.net/cvs/?group_id=56288</CODE></a>

        <pre>
cd $PTII/vendors/ptinyos
cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/nescc login
<i>Hit Enter when prompted for a password</i>
cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/nescc co -r nc2momllib nesc
        </pre>

      <li> Boostrap nesC 
        <pre>
cd $PTII/vendors/ptinyos/nesc
./Bootstrap
        </pre>
        
      <li> Run configure for nesc 
        <pre>
./configure --prefix=$PTII/vendors/ptinyos
        </pre>
        If you are using Cygwin, and configure has trouble finding
        <code>TOSROOT</code> or <code>TOSDIR</code>, try expanding your
        <code>$PTII</code> environment variable to
        <code>/cygdrive/c/ptII</code> or something similar.  Also try
        expanding the <code>TOSROOT</code> and <code>TOSDIR</code>
        environment variables if you still have problems.

      <li> Install nesc 
        <pre>
make
make install
        </pre>
        This will create directories in <code>$PTII/vendors/ptinyos</code>.

        <p>If you are using Cygwin and make cannot find avr-gcc, then
        avr-gcc is probably not in your path.  Locate avr-gcc and add
        the directory to your path.  If you cannot find avr-gcc, then
        the AVR rpm's were not installed correctly, and you will need
        to try to reinstall them.

      <li> <a name="NC2MOMLLIB_NESC_source">Set another environment variable</a> (NC2MOMLLIB_NESC) that
      points to the nesc installation.

        <ul>
          <li> Under bash, type:
            <pre>
export NC2MOMLLIB_NESC=$PTII/vendors/ptinyos
            </pre>
            
          <li>Under csh or tcsh 
            <pre>
setenv NC2MOMLLIB_NESC $PTII/vendors/ptinyos
            </pre>
        </ul>

      <li> Run the example 
        <pre>
cd $TOSROOT/contrib/momllib
make momllib mica
        </pre>

      <li> See if the examples worked: 
        <menu> 
          <li> You should see some valid MoML code in
          <CODE>$TOSROOT/contrib/momllib/output/Counters.xml</CODE>

          <li> It should correspond to the contents of
          <CODE>$TOSDIR/lib/Counters</CODE>
        </menu>
    </ol>


</body>
</html>
