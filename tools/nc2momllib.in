#!@pathperl@
# -*- perl -*-

# This file is part of the nc2MoMLlib generator.
#    Copyright (C) 2004 Elaine Cheong
# 
# The attached "nesC" software is provided to you under the terms and
# conditions of the GNU General Public License Version 2 as published by the
# Free Software Foundation.
# 
# nesC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with nesC; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

# Configuration
$prefix = "@prefix@";
$exec_prefix = "@exec_prefix@";
$NCDIR = "@libdir@/ncc";
$TOSDIR = "@TOSDIR@";
$TOSDIR = $ENV{"TOSDIR"} if defined($ENV{"TOSDIR"});

$PTINYOS_COMPONENT = "ptolemy.domains.nc.lib.NCComponent";
$PTINYOS_PREFIX = "\$CLASSPATH";

if ($#ARGV < 1) {
    &fail("Usage: nc2momllib <output directory> <input director(ies) for nesC files> <options that start with "-">");
}

# Get the name of the output directory for the top level index file.
my $outputdir = shift @ARGV;

# Get the input director(ies).
while (my $temp = shift @ARGV) {
  $_ = $temp;
  if (/^(-).*/) {
    unshift @ARGV, $temp;
    last;
  } else {
    # Save the input directory
    push @inputdirs, $temp;
  }
}

# Copy the rest of the input arguments to another array.
@myargs = @ARGV;

open(TOSINDEX, ">", "${outputdir}/TOSIndex.xml")
  or die "Can't open top level index file: $!";

print TOSINDEX "<entity name=\"TOSIndex\" class=\"ptolemy.moml.EntityLibrary\">\n";
print TOSINDEX "  <configure>\n";
print TOSINDEX "    <?moml\n";
print TOSINDEX "      <group>\n";

# Open each input directory and create an .xml file for each .nc file
# and an index.xml file in the current directory and all
# subdirectories.
while (my $inputdir = shift @inputdirs) {
  openrecursive($inputdir);
}

print TOSINDEX "      </group>\n";
print TOSINDEX "    ?>\n";
print TOSINDEX "  </configure>\n";
print TOSINDEX "</entity>\n";

close(TOSINDEX);

#print STDERR "Couldn't execute ncc\n";
#exit 2;

sub fail {
    print STDERR "$_[0]\n";
    exit 2;
}

sub openrecursive {
  # Open the current directory.
  my $inputdir = shift(@_);
  my $inputdir_handle;
  opendir($inputdir_handle, $inputdir) or die "Could not open tinyos subdirectory: $!";

  # Get the name of the current directory from the absolute pathname.
  @entitynameparts = split "\/", $inputdir;
  my $entityname = pop @entitynameparts;

  print TOSINDEX "<entity name=\"${entityname}\" class=\"ptolemy.moml.EntityLibrary\">\n";
#  print TOSINDEX "  <configure>\n";
#  print TOSINDEX "    <?moml\n";
#  print TOSINDEX "      <group>\n";

  # Get all files in current directory (including "."), except for ".."
  my @allfiles = grep !/^\.\.\z/, readdir $inputdir_handle;
  foreach my $tempfile (@allfiles) {
    # Process files in current directory.
    if ($tempfile eq ".") {
      # Make another copy of the input arguments.
      my @tempargs = @myargs;

      unshift @tempargs, "-I${inputdir}";
      push @tempargs, "${inputdir}";

      unshift @tempargs, "-tosdir=$TOSDIR";
      unshift @tempargs, "-fmoml-ptinyos-component=$PTINYOS_COMPONENT";
      unshift @tempargs, "-fmoml-ptinyos-prefix=$PTINYOS_PREFIX";
      unshift @tempargs, "-fmomldir=$inputdir";
      unshift @tempargs, "-fmomllib";
      #unshift @tempargs, "-fsyntax-only";
      unshift @tempargs, "$exec_prefix/bin/ncc";

      system(@tempargs) == 0
        or warn "Warning: system(@tempargs) had errors: $!";

      if (-e "${inputdir}/index.xml") {
        my $myprintpath = $inputdir;
        $myprintpath =~ s/${TOSDIR}/tos/;

        print TOSINDEX "<input source=\"${myprintpath}/index.xml\"/>\n";
      }
    } elsif (-d "${inputdir}/${tempfile}" and ($tempfile ne "CVS")) {
      # Open subdirectories.
      openrecursive("${inputdir}/${tempfile}");
    }
  }
#  print TOSINDEX "      </group>\n";
#  print TOSINDEX "    ?>\n";
#  print TOSINDEX "  </configure>\n";
  print TOSINDEX "</entity>\n";
}
